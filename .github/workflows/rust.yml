name: Build

on: 
  push:
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build-ubuntu:

    runs-on: ubuntu-latest

    steps:    
    - uses: actions/checkout@v2
    - name: Update apt
      run: sudo apt-get update
    - name: Install deps
      run: sudo apt-get install libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libpango1.0-dev libatk1.0-dev libgtk-3-dev
    - name: Build snap
      uses: snapcore/action-build@v1
      id: snapcraft
    - name: Archive snap
      uses: actions/upload-artifact@v2
      with:
        name: snap
        path: ${{ steps.snapcraft.outputs.snap }}
    - name: Run tests
      run: cargo test
    - name: Cargo publish
      if: startsWith(github.ref, 'refs/tags/v')
      run: cargo publish --token ${{ secrets.CRATES_IO_API_TOKEN }}
    - name: Snap publish
      if: startsWith(github.ref, 'refs/tags/v')
      uses: snapcore/action-publish@v1
      with:
        store_login: ${{ secrets.UBUNTU_STORE_LOGIN }}
        snap: ${{ steps.snapcraft.outputs.snap }}
        release: stable

  build-windows:
    
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Build release
      run: cargo build --release
    - name: Create install package
      run: |
        $env:PATH += ";$env:WIX\bin"
        candle.exe installer\ImageSieve.wxs
        light.exe ImageSieve.wixobj -ext WixUIExtension -cultures:en-us
    - name: Signing install package
      shell: pwsh
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.PFX_BASE64 }}")
        $currentDirectory = Get-Location
        $certificatePath = Join-Path -Path $currentDirectory -ChildPath "MyCertificate.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
        $sdkToolsPath = Join-Path -Path 'C:\Program Files (x86)\Windows Kits\10\bin' -ChildPath 10.0.19041.0 -AdditionalChildPath x86
        $env:Path += ";$sdkToolsPath"
        SignTool.exe sign /tr http://timestamp.digicert.com /fd SHA256 /a /f "$certificatePath" /p ${{ secrets.PFX_PRIVATE_KEY }} ImageSieve.msi
    - name: Archive install package
      uses: actions/upload-artifact@v2
      with:
        name: windows-installer
        path: ImageSieve.msi
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload windows artifact
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ImageSieve.msi
        asset_name: ImageSieve.msi
        asset_content_type: application/octet-stream
