import { ListView, Button, LineEdit, TabWidget, GroupBox, VerticalBox, HorizontalBox, ScrollView, ComboBox } from "sixtyfps_widgets.60";


import { SortView } from "sort.60";
import { EventsView } from "events.60";
import { CommitView, CommitMethodValues } from "commit.60";
import { SettingsView } from "settings.60";

export { CommitMethodValues }

ImageSieve := Window {
    min-width: 1600px;
    min-height: 800px;
    title: "ImageSieve";
    icon: @image-url("ImageSieve.png");

    property <string> window-title <=> root.title;
    property <bool> loading: true;

    // Map properties of SortView
    property images-list-model <=> sort-view.images-list-model;
    property current-list-item <=> sort-view.current-list-item;
    property images-model <=> sort-view.images-model;
    property current-image <=> sort-view.current-image;
    property current-image-index <=> sort-view.current-image-index;
    property source-directory <=> sort-view.source-directory;
    property calculating-similarities <=> sort-view.calculating-similarities;
    callback item-selected <=> sort-view.item-selected;
    callback browse-source <=> sort-view.browse-source;
    callback take-over-toggle <=> sort-view.take-over-toggle;
    callback open <=> sort-view.open;

    // Map properties of EventsView
    property events-model <=> events-view.events-model;
    callback add-event <=> events-view.add-event;
    callback check-event <=> events-view.check-event;   
    callback date-valid <=> events-view.date-valid;
    callback update-event <=> events-view.update-event;
    callback remove-event <=> events-view.remove-event;

    // Map properties of CommitView
    property commit-result-model <=> commit-view.commit-result-model;
    property target-directory <=> commit-view.target-directory;
    property commit-method <=> commit-view.commit-method;
    property commit-method-value <=> commit-view.commit-method-value;
    property commit-running <=> commit-view.commit-running;
    callback commit <=> commit-view.commit;
    callback browse-target <=> commit-view.browse-target;

    // Map properties of SettingsView
    property use-timestamps <=> settings-view.use-timestamps;
    property timestamp-difference <=> settings-view.timestamp-difference;
    property use-similarity <=> settings-view.use-similarity;
    property similarity-sensitivity <=> settings-view.similarity-sensitivity;
    callback recheck-similarities <=> settings-view.recheck-similarities;

    forward-focus: key-handler;
    key-handler:= FocusScope {  
        key-pressed(event) => {
            if (event.text == "\u{000E}"){
                if (current-list-item > 0) {
                    sort-view.prev-clicked();
                }
            }
            if (event.text == "\u{000F}") {
                if (images-list-model.length > 0 && current-list-item < images-list-model.length - 1) {
                    sort-view.next-clicked();
                }
            }
            // TODO: On up and down key, change current-image-insex
            // First waiting for https://github.com/sixtyfpsui/sixtyfps/issues/170 because we currently cannot get the up or down key...
            // Then waiting for https://github.com/sixtyfpsui/sixtyfps/issues/98 to be implemented, otherwise it will get too complicated
            // On key up, the next image-index shall be selected, on key down the previous one
            if (event.text == " ") {
                sort-view.selected-clicked()
            }
            accept
        }
    }

    Text {
        text: "Please wait, loading...";
        visible: loading;
    }

    TabWidget { 
        visible: !loading;
        Tab {
            title: "\u{1F4F7} \u{1F4F9}  Images";
            
            sort-view := SortView {
            }
        }

        Tab {
            title: "\u{1F4C5}  Events";

            events-view := EventsView {
            }
        }

        Tab {
            title: "\u{1F4BE}  Sieve";
            
            commit-view := CommitView {
            }
        }

        Tab {
            title: "\u{2699} Settings";
            
            settings-view := SettingsView {                
            }
        }
    }
}

