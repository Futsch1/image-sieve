import { ListView, Button, LineEdit, GroupBox, ScrollView, VerticalBox } from "sixtyfps_widgets.60";


struct Event := {
    name: string,
    start-date: string,
    end-date: string
}

EventsView := ScrollView { 
    property <[Event]> events-model : [{name: "Test", start-date: "", end-date: ""},{name: "Test2", start-date: "", end-date: ""}];
    callback add-event(string, string, string);
    callback check-event(string, string, bool) -> string;
    callback date-valid(string) -> bool;
    callback remove-event(int);
    callback update-event(int);

     
    VerticalLayout { 
        alignment: start;

        for item[i] in events-model: 
        GroupBox {             
            title: item.name + ", " + item.start-date + " - " + item.end-date;
            padding: 5px;

            GridLayout {
                spacing: 5px;
                padding: 5px;
                Text {
                    text: "Event name";
                    vertical-alignment: center;
                    //horizontal-alignment: right;
                }
                event-name := LineEdit { 
                    text: item.name;
                    accepted => {
                        item.name = event-name.text;
                        update-event(i);
                    }
                }
                Text {
                    text: "\u{1F4C5} Start date";
                    row: 1;
                    vertical-alignment: center;
                    //horizontal-alignment: right;
                }
                start-date := LineEdit { 
                    text: item.start-date;
                    min-width: 300px;
                    accepted => {
                        error-message.text = check-event(start-date.text, item.end-date, false);
                        if (date-valid(start-date.text) && "" == error-message.text) {
                            item.start-date = start-date.text;
                            update-event(i);
                        }
                        else {
                            start-date.text = item.start-date;
                        }
                    }
                }
                Text {
                    text: "\u{1F4C5} End date";
                    row: 2;
                    vertical-alignment: center;
                    //horizontal-alignment: right;
                }
                end-date := LineEdit { 
                    text: item.end-date;
                    min-width: 300px;
                    accepted => {
                        error-message.text = check-event(item.start-date, end-date.text, false);
                        if (date-valid(end-date.text) && "" == error-message.text) {
                            item.end-date = end-date.text;
                            update-event(i);
                        }
                        else {
                            end-date.text = item.end-date;
                        }
                    }
                }
            }
            Button {
                width: 300px;
                text: "\u{1F5D1} Remove";
                clicked => { remove-event(i) }
            }
        }
        GroupBox { 
            padding: 5px;
            title: "New event";
            VerticalBox { 
                //padding: 5px;
                alignment: start;
                new-name := LineEdit { 
                    placeholder-text: "Event name";
                }
                new-start-date := LineEdit { 
                    min-width: 300px;
                    placeholder-text: "Start date (YYYY-MM-DD or DD-MM-YYYY)";
                }
                new-end-date := LineEdit { 
                    min-width: 300px;
                    placeholder-text: "End date (YYYY-MM-DD or DD-MM-YYYY)";
                }
            }
            Button {
                text: "\u{2795} Add";
                width: 300px;
                clicked => { 
                    if (date-valid(new-start-date.text) && date-valid(new-end-date.text)) {
                        error-message.text = check-event(new-start-date.text, new-end-date.text, true);
                        if (error-message.text == "") {                            
                            add-event(new-name.text, new-start-date.text, new-end-date.text);
                            new-name.text = "";
                            new-start-date.text = "";
                            new-end-date.text = "";
                        }
                    } else {
                        error-message.text = "Invalid date";
                    }
                }
            }
            error-message := Text {
                text: "";
                color: red;
                visible: text != "";
            }
        }
    }
}